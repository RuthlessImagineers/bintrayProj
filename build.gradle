import redis.embedded.RedisServer

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: "com.testvagrant.optimus.plugin"


optimus {
    testFeed = System.getProperty("testFeed");
    tags = System.getProperty("tags");
    classpath = sourceSets.test.runtimeClasspath
}

reporting {
    baseDir= "$buildDir/reports"
}

buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.codehaus.gpars:gpars:1.2.1"
        classpath "net.masterthought:cucumber-reporting:3.3.0"
        classpath "gradle.plugin.com.testvagrant.optimus:Optimus:1.0"
        classpath "com.testvagrant.optimus:optimus:1.0-SNAPSHOT"
        classpath "com.github.kstyrc:embedded-redis:0.6"
    }

}

repositories {
    mavenLocal()
    mavenCentral()
}

ext.cukesVersion = '1.2.5'

dependencies {
    compile group: 'info.cukes', name: 'cucumber-junit', version: "$cukesVersion"
    compile group: 'info.cukes', name: 'cucumber-core', version: "$cukesVersion"
    compile group: 'info.cukes', name: 'cucumber-java8', version: "$cukesVersion"
    compile 'org.codehaus.groovy:groovy-all:2.2.0'
    compile('org.seleniumhq.selenium:selenium-java:2.53.1')
    compile 'cglib:cglib:3.2.4'
    compile('com.testvagrant.optimus:optimus:1.0-SNAPSHOT') {
        changing true
    }
    compile('com.testvagrant.optimusMonitor:optimusMonitor:1.0-SNAPSHOT')
    compile group: 'com.github.kstyrc', name: 'embedded-redis', version: '0.6'
    testCompile('com.google.inject:guice:3.0')
    testCompile(group: 'com.googlecode.lambdaj', name: 'lambdaj', version: '2.3.3')
    testCompile(group: 'org.json', name: 'json', version: '20131018')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    compile group: 'org.atteo', name: 'evo-inflector', version: '1.2.1'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.7'
}


def RedisServer redisServer;
task startRedisServer() {
    doLast {
        redisServer = new RedisServer();
        redisServer.start();
    }
}

task killRedisServer() {
    doLast {
        "redis-cli shutdown".execute()
    }
}


